buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

plugins {
    id 'java'
    id 'checkstyle'
//    id 'spring-boot'
//    id 'io.spring.dependency-management'
    id 'net.saliman.cobertura' version '2.2.8'
    id 'findbugs'
    id 'pmd'
    id 'sonar-runner'
}

/*
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'build-dashboard'
apply plugin: 'project-report'
*/
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'twitter-utils'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-social-twitter")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-web")

    compile("com.google.guava:guava:12.0")
    compile("org.apache.commons:commons-lang3:3.4")
    compile("commons-io:commons-io:2.4")
    compile("joda-time:joda-time:2.8.2")

//    compile("org.slf4j:slf4j-api:1.7.12")
//    compile("org.slf4j:slf4j-log4j12:1.7.12")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.hamcrest:hamcrest-all:1.3")
}

/*
eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}
*/

checkstyle {
    //configFile = new File(rootDir, "checkstyle.xml")
    //toolVersion = "6.8.1";
    configProperties['config_loc'] = "./config/checkstyle/";
    showViolations = true;
}

cobertura {
    coverageFormats = ['html', 'xml'];
}

findbugs {
    effort = "max";
    ignoreFailures = true;
}

sonarRunner {

}

//build-dashboard { }


//project-report { }

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}
